* eureka 相关的知识点

** 什么是 eureka

eureka 是 Netfix 为服务组件的一个子模块，基于Rest 的服务发现，

*** 流程说明

1. eureka 客户端启动后，定时向 eureka 服务端 注册自己的服务信息，（服务名，ip，端口等）；
2. 客户端启动后，定时拉取服务端以保存的服务注册信息；
3. 拉取服务端保存的服务注册信息后，就可以调用消费其他服务提供者提供的服务.


** 客户端启动时是如何注册到 服务端的？

方法调用流程 initScheduledTasks()->new HeartbeatThread->renew()->register()
eureka 客户端在启动时，首先会创建一个心跳的定时任务，定时向服务器发送心跳信息，服务端会对客户端心跳做出响应，
如果响应是 404 ，说明服务端没有该客户端的服务信息，那么客户端则会向服务端发送注册请求，注册信息包括服务名，ip，端口，唯一实例ID 等信息。

** 服务端如何保存客户端服务信息

服务端 有一个 register 方法，服务端存在一个 concurrentHashMap，客户端通过http 的方式 将服务信息发送给服务端，
服务端将信息保存在一个 concurrentHashMap 中。

** 客户端如何拉取服务端保存的信息

:: 需要时拉取 还是先拉取到本地，需要的时候直接从本地获取？

客户端是通过一个定时任务，刷新本地的服务信息的，需要的时候直接从本地获取服务信息。

** 如何搭建高可用集群

:: eureka.client.service-url.defaultZone

通过上方的配置，将多个eureka 进行注册，用，号隔开

注册中心接收到注册信息之后，会判断注册的服务是注册中心的同步信息，还是其他服务的同步信息，如果是客户端注册信息，那么会同步到其他的注册中心


** 心跳和服务剔除机制是什么？

*** 心跳机制
客户端启动之后，会开启一个定时任务，定时向服务端发送心跳数据。告知服务自己还活着，默认的心跳间隔是 30s

*** 服务剔除机制
1.如果开启了自我保护机制，那么所有的服务，包括长时间没有接收到心跳的服务，都不会剔除。
2.如果未开启自我保护机制，那么将判断最后一分钟收到的心跳次数，与一分钟的心跳次数的临界值进行比较如果 前者大于后者且后者大于0则启动剔除机制。
3.一旦剔除机制开启，那么 eureka 会通过随机数的方式进行剔除，避免自我保护开启之前，将所有服务剔除，包括正常的。

** eureka 的自我保护机制



