* 类加载机制

** 类加载的五个部分

*** 加载

类加载的过程中的一个阶段，这个节点会在内存中生成代表这个类的java.lang.Class 对象，作为方法区这个类的各种数据的入口。

*** 验证

确保class 文件中的字节流包含的信息是否符合当前虚拟机的要求，并且不会危害虚拟机自身的安全。

*** 准备

在方法区分配这些变量所使用的内存空间

*** 解析

将虚拟机常量池中的符号引用替换为直接引用的过程

*** 初始化

** 类加载器

JVM 提供了三种类加载器

1. 启动类加载器（bootstrap ClassLoader）
2. 扩展类加载器（extension ClassLoader）
3. 应用程序类加载器（Application ClassLoader）

jvm 通过双亲委派模型进行类加载，我们也可以通过 集成 java.lang.ClassLoader 实现自定义的类加载器

** 双亲委派

当类受到了类加载请求，他首先不会尝试自己区加载这个类，而是把这个请求委派给父类去完成，每一个层次类加载都是如此，因此所有的加载请求都应该传送到类启动类加载，
只有当父类加载器无法完成这个请求的时候，子类加载器才回去自己加载。

采用那个双亲委派的好处是保证类加载安全，核心类不易被串改


** OSGI 动态模型系统

是java 的动态模型系统，java 动态化模块系统的一系列规范。 动态改变构造，时下模块级别的热插拔。不遵守类加载的双亲委派。
