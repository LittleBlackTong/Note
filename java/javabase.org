* java 基础知识

** JDK,JRE,JVM 三者的关系

JDK （java development kit—）  java 开发工具
JRD （java runtime eniroment） java 运行时环境
JVM （java virtual machine） java 虚拟机

:: jdk 提供给开发人员用的工具  jre 是 java 运行环境  jre 包含着 jvm  jdk 中包含着 jre 




** final 作用

1. 修饰类： 表示方法不能被继承
2. 修饰方法： 表示方法不能被子类覆盖，但是可以重载
3. 修饰变量： 表示变量一旦被复制，就不可以更改他的值

*** 修饰成员变量

1. 如果 final 修饰类的变量，只能在静态块中指定初始值或者生命该类变量时指定初始值
2. 如果final修饰的是成员变量， 可以在非静态块声明该变量或者构造器中执行初始值

*** 修饰局部变量
系统不会为局部变量初始化，局部变量必须由程序员显示初始化。因此使用final 修饰局部变量时，即可在定义时指定默认值，之后不可以变更

*** 修饰基本类型和引用类型数据

如果是基本数据类型，数值初始化之后不可以被改变，如果是引用类型，则在堆砌初始化之后便不能让其指向另一个对象，但是引用的值是可以变的。

*** 为什么局部内部类，和匿名内部类只能访问局部 final 变量的方式

当外部方法执行结束之后，局部变量就会被销毁了，但是内部类对象可能还存在，内部对象访问了一个不存在的变量， 为了解决这个问题就将局部变量复制了一份作为内部类的成员变量
，当局部变量死亡之后，内部类仍然可以访问。：： 将局部变量复制了之后，如果局部变量发生改变，那么内部类的变量也给跟着改，为了避免这个问题， 就将局部变量设置成final，这样
初始化之后，就不需要去修改这个变量保证是一致的。

** String StringBuffer StringBuilder

string 是 final 修饰的 不可变，每次操作都会产生新的对象
StringBuffer 和StringBuilder 都是在原对象上操作
StringBuffer 是线程安全的，StringBuilder 线程不安全
StringBuffer 方法都是 synchronized 修饰的

性能 StringBuilder>StringBuffer>String

优先使用 StringBuilder  多线程情况下使用 StringBuffer


** 接口和抽象类的区别

抽象类可以存在普通成员函数，而接口只能存在 public abstract 方法创建一级缓存的
抽象类中的成员变量可以是各种类型，而接口成员变量只能是 public static final 类型的
抽象类只能继承一个，接口可以多个


抽象类则是为了方法的复用，如果是为了关注做了哪些事，关注方法 那么用接口
