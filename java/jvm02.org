* 垃圾回收算法

** gc 要做的三件事 
（1）哪些内存需要回收
（2）什么时候会回收
（3）怎么回收
** 哪些对象已经死亡  

1.引用计数法 
   循环引用问题
   在 Java 中对象是有关联的，要操作对象必须引用进行，通过引用记数法来判断一个对象是否可以回收，一个对象如果没有任何与之关联的引用，即他们的引用记数都不为0
则说明对象不太可能被用到，那么这个对象就是可回收对象。



2.根搜索算法
   GC Root Tracing  通过 CGRoots 的点作为七点，然后向下搜索，如果一个对象到 GCRoot 之间没有任何引用链相连，说明已死亡
   GC Root 主要又三个 VM 栈中的引用/方法区中的静态引用/JNI 中的引用

为解决引用记数循环引用问题，java 使用 可达性分析法，通过 GC root 作为对象的起点搜索。如果在GCRoot 和对象之间没有一个可到达路径，称该对象是不可达的
不可达对象不等价余可回收对象，不可达对象变为可回收对象至少要经过两次标记的过程。两次标记后仍然是可回收对象，将面临回收。

*** 垃圾收集算法

1.标记清除法
效率低，内存碎片多

2.复制算法 
eden 区，fromservior区  toservior区

3.标记整理法

4.分代收集算法
*** 垃圾收集器

1. serial

2.parNew

3. parallel scavenge

4. serialOld

5 ParallelOld

6 CMS

*** 参数

1. Xms
2. Xmx
3. Xmn

4. -XX：+PrintGCDetails
5. -XX：+SurvivorTatio
6. -XX: + PretenureSizeThreshold

